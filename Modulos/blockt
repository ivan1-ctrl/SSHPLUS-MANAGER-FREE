#!/bin/bash
clear
IP=$(wget -qO- ipv4.icanhazip.com)
arq="/etc/Plus-torrent"
echo -e "\E[44;1;37m           FIREWALL TORRENT BLOCK           \E[0m"
echo ""
if [[ -e "$arq" ]]; then
    fun_fireoff () {
        iptables -P INPUT ACCEPT
        iptables -P OUTPUT ACCEPT
        iptables -P FORWARD ACCEPT
        iptables -t mangle -F
        iptables -t mangle -X
        iptables -t nat -F
        iptables -t nat -X
        iptables -t filter -F
        iptables -t filter -X
        iptables -F
        iptables -X
        rm $arq
        sleep 3
    }
fun_spn1 () {
    helice () {
        fun_fireoff > /dev/null 2>&1 & 
        tput civis
        while [ -d /proc/$! ]
        do
            for i in / - \\ \|
            do
                sleep .1
                echo -ne "\e[1D$i"
            done
        done
        tput cnorm
    }
    echo -ne "\033[1;31mREMOVING FIREWALL\033[1;32m.\033[1;33m.\033[1;31m. \033[1;32m"
    helice
    echo -e "\e[1DOk"
}
read -p "$(echo -e "\033[1;32mDO YOU WANT TO REMOVE FIREWALL RULES? \033[1;33m[y/n]:\033[1;37m") " -e -i n resp
if [[ "$resp" = 'y' ]]; then
    echo ""    
    fun_spn1
    echo ""
    echo -e "\033[1;33mTORRENT UNBLOCKED!\033[0m"
    echo ""
    echo -e "\033[1;32mFIREWALL REMOVED SUCCESSFULLY!\033[0m"
    echo ""
    if [[ -e /etc/openvpn/openvpn-status.log ]]; then
        echo -e "\033[1;31m[\033[1;33m!\033[1;31m]\033[1;33m RESTART THE SYSTEM TO COMPLETE"
        echo ""
        read -p "$(echo -e "\033[1;32mRESTART NOW \033[1;31m? \033[1;33m[y/n]:\033[1;37m ")" -e -i y respost
        echo ""
        if [[ "$respost" = 'y' ]]; then
            echo -ne "\033[1;31mRestarting" 
            for i in $(seq 1 1 5); do
                echo -n "."
                sleep 01
                echo -ne ""
            done
            reboot
        fi
    fi
    sleep 2
    menu
else
    sleep 1
    menu
fi
else
echo -e "\033[1;31m[\033[1;33m!\033[1;31m]\033[1;33m BETA FUNCTION, USE AT YOUR OWN RISK"
echo ""
read -p "$(echo -ne "\033[1;32mDO YOU WANT TO APPLY FIREWALL RULES? \033[1;33m[y/n]:\033[1;37m") " -e -i n resp
if [[ "$resp" = 'y' ]]; then
echo ""
echo -ne "\033[1;33mTO CONTINUE, CONFIRM YOUR IP: \033[1;37m"; read -e -i $IP IP
if [[ -z "$IP" ]];then
echo ""
echo -e "\033[1;31mInvalid IP\033[1;32m"
sleep 1
echo ""
read -p "Enter your IP: " IP
fi
echo ""
sleep 1
fun_fireon () {
mportas () {
unset portas
portas_var=$(lsof -V -i tcp -P -n | grep -v "ESTABLISHED" |grep -v "COMMAND" | grep "LISTEN")
while read port; do
var1=$(echo $port | awk '{print $1}') && var2=$(echo $port | awk '{print $9}' | awk -F ":" '{print $2}')
[[ "$(echo -e $portas|grep "$var1 $var2")" ]] || portas+="$var1 $var2\n"
done <<< "$portas_var"
i=1
echo -e "$portas"
}
[[ $(iptables -h|wc -l) -lt 5 ]] && apt-get install iptables -y > /dev/null 2>-1
NIC=$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)
echo 'iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -t filter -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT' > $arq
echo 'iptables -A OUTPUT -p tcp --dport 53 -m state --state NEW -j ACCEPT
iptables -A OUTPUT -p udp --dport 53 -m state --state NEW -j ACCEPT' >> $arq
echo 'iptables -A OUTPUT -p tcp --dport 67 -m state --state NEW -j ACCEPT
iptables -A OUTPUT -p udp --dport 67 -m state --state NEW -j ACCEPT' >> $arq
list_ips=$(mportas|awk '{print $2}')
while read PORT; do
echo "iptables -A INPUT -p tcp --dport $PORT -j ACCEPT
iptables -A INPUT -p udp --dport $PORT -j ACCEPT
iptables -A OUTPUT -p tcp --dport $PORT -j ACCEPT
iptables -A OUTPUT -p udp --dport $PORT -j ACCEPT
iptables -A FORWARD -p tcp --dport $PORT -j ACCEPT
iptables -A FORWARD -p udp --dport $PORT -j ACCEPT
iptables -A OUTPUT -p tcp -d $IP --dport $PORT -m state --state NEW -j ACCEPT
iptables -A OUTPUT -p udp -d $IP --dport $PORT -m state --state NEW -j ACCEPT" >> $arq
done <<< "$list_ips"
echo 'iptables -A INPUT -p icmp --icmp-type echo-request -j DROP' >> $arq
echo 'iptables -A INPUT -p tcp --dport 10000 -j ACCEPT
iptables -A OUTPUT -p tcp --dport 10000 -j ACCEPT' >> $arq
echo "iptables -t nat -A PREROUTING -i $NIC -p tcp --dport 6881:6889 -j DNAT --to-dest $IP
iptables -A FORWARD -p tcp -i $NIC --dport 6881:6889 -d $IP -j REJECT
iptables -A OUTPUT -p tcp --dport 6881:6889 -j DROP
iptables -A OUTPUT -p udp --dport 6881:6889 -j DROP" >> $arq
echo 'iptables -A FORWARD -m string --algo bm --string "BitTorrent" -j DROP
iptables -A FORWARD -m string --algo bm --string "BitTorrent protocol" -j DROP
iptables -A FORWARD -m string --algo bm --string "peer_id=" -j DROP
iptables -A FORWARD -m string --algo bm --string ".torrent" -j DROP
iptables -A FORWARD -m string --algo bm --string "announce.php?passkey=" -j DROP
iptables -A FORWARD -m string --algo bm --string "torrent" -j DROP
iptables -A FORWARD -m string --algo bm --string "announce" -j DROP
iptables -A FORWARD -m string --algo bm --string "info_hash" -j DROP
iptables -A FORWARD -m string --string "get_peers" --algo bm -j DROP
iptables -A FORWARD -m string --string "announce_peer" --algo bm -j DROP
iptables -A FORWARD -m string --string "find_node" --algo bm -j DROP' >> $arq
sleep 2
chmod +x $arq
/etc/Plus-torrent > /dev/null
}
fun_spn2 () {
    helice () {
        fun_fireon > /dev/null 2>&1 & 
        tput civis
        while [ -d /proc/$! ]
        do
            for i in / - \\ \|
            do
                sleep .1
                echo -ne "\e[_{{{CITATION{{{_1{](https://github.com/binnh2002/sshpanel/tree/ede3a5dfb9c518383ce68ce2548ebf3eafb15a47/_$_Version%2FSSHPLUS%20v12%2FModulos%2Fblockt.sh)[_{{{CITATION{{{_2{](https://github.com/shashikacineru/ssh-server/tree/52acdee7467ecff7f45e48a1cc8007a861d5f6a4/_$_Version%2FSSHPLUS%20v21%2FModulos%2Fotimizar.sh)[_{{{CITATION{{{_3{](https://github.com/Romba89/Vpsplus2/tree/42f27fb6ba378cf5fe4ab8567f415f459b5d3ca3/blockt.sh)[_{{{CITATION{{{_4{](https://github.com/shashikacine/cj-ssh-server-vip/tree/ebbdab3e4910e30accc2531b4d3c5499d694b8f6/Modulos%2Fblockt.sh)[_{{{CITATION{{{_5{](https://github.com/ko2x/VPSEG/tree/76064e3b43f69ec87ffdfaf90733e7f2e21c905c/Modulos%2Fblockt.sh)[_{{{CITATION{{{_6{](https://github.com/TDMods/VPS-MX-PRO/tree/d75d00f8dd721a4fe95d5f26971f4162a9ce23b9/Modulos%2F_Modulos%2FFiles%2Fsockspy.sh)[_{{{CITATION{{{_7{](https://github.com/AAAAAEXQOSyIpN2JZ0ehUQ/ADM-ULTIMATE-NEW-FREE/tree/fa85a89fc81c55762f2ca7302991db00e301c4fd/Install%2FNEWFREEINSTAL%2FADMBASE%2Fshadowsocks.sh)[_{{{CITATION{{{_8{](https://github.com/AAAAAEXQOSyIpN2JZ0ehUQ/ADM-ULTIMATE-NEW-FREE/tree/fa85a89fc81c55762f2ca7302991db00e301c4fd/Install%2FNEWFREEINSTAL%2FADMBASE%2FADMbot.sh)[_{{{CITATION{{{_9{](https://github.com/gilagajet/premvps/tree/47028c82a6d861cee9c094c2a1cacd84ad969ee9/ssh-vpn.sh)
